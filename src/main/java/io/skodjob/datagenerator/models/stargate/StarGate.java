/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.skodjob.datagenerator.models.stargate;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class StarGate extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -443295484777882232L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StarGate\",\"namespace\":\"io.skodjob.datagenerator.models.stargate\",\"fields\":[{\"name\":\"character_name\",\"type\":\"string\"},{\"name\":\"source_planet\",\"type\":\"string\"},{\"name\":\"target_planet\",\"type\":\"string\"},{\"name\":\"quote\",\"type\":\"string\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"duration_unit\",\"type\":\"string\"},{\"name\":\"distance\",\"type\":\"int\"},{\"name\":\"distance_unit\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<StarGate> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<StarGate> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<StarGate> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<StarGate> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<StarGate> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this StarGate to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a StarGate from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a StarGate instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static StarGate fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence character_name;
  private java.lang.CharSequence source_planet;
  private java.lang.CharSequence target_planet;
  private java.lang.CharSequence quote;
  private int duration;
  private java.lang.CharSequence duration_unit;
  private int distance;
  private java.lang.CharSequence distance_unit;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public StarGate() {}

  /**
   * All-args constructor.
   * @param character_name The new value for character_name
   * @param source_planet The new value for source_planet
   * @param target_planet The new value for target_planet
   * @param quote The new value for quote
   * @param duration The new value for duration
   * @param duration_unit The new value for duration_unit
   * @param distance The new value for distance
   * @param distance_unit The new value for distance_unit
   */
  public StarGate(java.lang.CharSequence character_name, java.lang.CharSequence source_planet, java.lang.CharSequence target_planet, java.lang.CharSequence quote, java.lang.Integer duration, java.lang.CharSequence duration_unit, java.lang.Integer distance, java.lang.CharSequence distance_unit) {
    this.character_name = character_name;
    this.source_planet = source_planet;
    this.target_planet = target_planet;
    this.quote = quote;
    this.duration = duration;
    this.duration_unit = duration_unit;
    this.distance = distance;
    this.distance_unit = distance_unit;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return character_name;
    case 1: return source_planet;
    case 2: return target_planet;
    case 3: return quote;
    case 4: return duration;
    case 5: return duration_unit;
    case 6: return distance;
    case 7: return distance_unit;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: character_name = (java.lang.CharSequence)value$; break;
    case 1: source_planet = (java.lang.CharSequence)value$; break;
    case 2: target_planet = (java.lang.CharSequence)value$; break;
    case 3: quote = (java.lang.CharSequence)value$; break;
    case 4: duration = (java.lang.Integer)value$; break;
    case 5: duration_unit = (java.lang.CharSequence)value$; break;
    case 6: distance = (java.lang.Integer)value$; break;
    case 7: distance_unit = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'character_name' field.
   * @return The value of the 'character_name' field.
   */
  public java.lang.CharSequence getCharacterName() {
    return character_name;
  }


  /**
   * Sets the value of the 'character_name' field.
   * @param value the value to set.
   */
  public void setCharacterName(java.lang.CharSequence value) {
    this.character_name = value;
  }

  /**
   * Gets the value of the 'source_planet' field.
   * @return The value of the 'source_planet' field.
   */
  public java.lang.CharSequence getSourcePlanet() {
    return source_planet;
  }


  /**
   * Sets the value of the 'source_planet' field.
   * @param value the value to set.
   */
  public void setSourcePlanet(java.lang.CharSequence value) {
    this.source_planet = value;
  }

  /**
   * Gets the value of the 'target_planet' field.
   * @return The value of the 'target_planet' field.
   */
  public java.lang.CharSequence getTargetPlanet() {
    return target_planet;
  }


  /**
   * Sets the value of the 'target_planet' field.
   * @param value the value to set.
   */
  public void setTargetPlanet(java.lang.CharSequence value) {
    this.target_planet = value;
  }

  /**
   * Gets the value of the 'quote' field.
   * @return The value of the 'quote' field.
   */
  public java.lang.CharSequence getQuote() {
    return quote;
  }


  /**
   * Sets the value of the 'quote' field.
   * @param value the value to set.
   */
  public void setQuote(java.lang.CharSequence value) {
    this.quote = value;
  }

  /**
   * Gets the value of the 'duration' field.
   * @return The value of the 'duration' field.
   */
  public int getDuration() {
    return duration;
  }


  /**
   * Sets the value of the 'duration' field.
   * @param value the value to set.
   */
  public void setDuration(int value) {
    this.duration = value;
  }

  /**
   * Gets the value of the 'duration_unit' field.
   * @return The value of the 'duration_unit' field.
   */
  public java.lang.CharSequence getDurationUnit() {
    return duration_unit;
  }


  /**
   * Sets the value of the 'duration_unit' field.
   * @param value the value to set.
   */
  public void setDurationUnit(java.lang.CharSequence value) {
    this.duration_unit = value;
  }

  /**
   * Gets the value of the 'distance' field.
   * @return The value of the 'distance' field.
   */
  public int getDistance() {
    return distance;
  }


  /**
   * Sets the value of the 'distance' field.
   * @param value the value to set.
   */
  public void setDistance(int value) {
    this.distance = value;
  }

  /**
   * Gets the value of the 'distance_unit' field.
   * @return The value of the 'distance_unit' field.
   */
  public java.lang.CharSequence getDistanceUnit() {
    return distance_unit;
  }


  /**
   * Sets the value of the 'distance_unit' field.
   * @param value the value to set.
   */
  public void setDistanceUnit(java.lang.CharSequence value) {
    this.distance_unit = value;
  }

  /**
   * Creates a new StarGate RecordBuilder.
   * @return A new StarGate RecordBuilder
   */
  public static io.skodjob.datagenerator.models.stargate.StarGate.Builder newBuilder() {
    return new io.skodjob.datagenerator.models.stargate.StarGate.Builder();
  }

  /**
   * Creates a new StarGate RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new StarGate RecordBuilder
   */
  public static io.skodjob.datagenerator.models.stargate.StarGate.Builder newBuilder(io.skodjob.datagenerator.models.stargate.StarGate.Builder other) {
    if (other == null) {
      return new io.skodjob.datagenerator.models.stargate.StarGate.Builder();
    } else {
      return new io.skodjob.datagenerator.models.stargate.StarGate.Builder(other);
    }
  }

  /**
   * Creates a new StarGate RecordBuilder by copying an existing StarGate instance.
   * @param other The existing instance to copy.
   * @return A new StarGate RecordBuilder
   */
  public static io.skodjob.datagenerator.models.stargate.StarGate.Builder newBuilder(io.skodjob.datagenerator.models.stargate.StarGate other) {
    if (other == null) {
      return new io.skodjob.datagenerator.models.stargate.StarGate.Builder();
    } else {
      return new io.skodjob.datagenerator.models.stargate.StarGate.Builder(other);
    }
  }

  /**
   * RecordBuilder for StarGate instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StarGate>
    implements org.apache.avro.data.RecordBuilder<StarGate> {

    private java.lang.CharSequence character_name;
    private java.lang.CharSequence source_planet;
    private java.lang.CharSequence target_planet;
    private java.lang.CharSequence quote;
    private int duration;
    private java.lang.CharSequence duration_unit;
    private int distance;
    private java.lang.CharSequence distance_unit;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.skodjob.datagenerator.models.stargate.StarGate.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.character_name)) {
        this.character_name = data().deepCopy(fields()[0].schema(), other.character_name);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.source_planet)) {
        this.source_planet = data().deepCopy(fields()[1].schema(), other.source_planet);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.target_planet)) {
        this.target_planet = data().deepCopy(fields()[2].schema(), other.target_planet);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.quote)) {
        this.quote = data().deepCopy(fields()[3].schema(), other.quote);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.duration)) {
        this.duration = data().deepCopy(fields()[4].schema(), other.duration);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.duration_unit)) {
        this.duration_unit = data().deepCopy(fields()[5].schema(), other.duration_unit);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.distance)) {
        this.distance = data().deepCopy(fields()[6].schema(), other.distance);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.distance_unit)) {
        this.distance_unit = data().deepCopy(fields()[7].schema(), other.distance_unit);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing StarGate instance
     * @param other The existing instance to copy.
     */
    private Builder(io.skodjob.datagenerator.models.stargate.StarGate other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.character_name)) {
        this.character_name = data().deepCopy(fields()[0].schema(), other.character_name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source_planet)) {
        this.source_planet = data().deepCopy(fields()[1].schema(), other.source_planet);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.target_planet)) {
        this.target_planet = data().deepCopy(fields()[2].schema(), other.target_planet);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.quote)) {
        this.quote = data().deepCopy(fields()[3].schema(), other.quote);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.duration)) {
        this.duration = data().deepCopy(fields()[4].schema(), other.duration);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.duration_unit)) {
        this.duration_unit = data().deepCopy(fields()[5].schema(), other.duration_unit);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.distance)) {
        this.distance = data().deepCopy(fields()[6].schema(), other.distance);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.distance_unit)) {
        this.distance_unit = data().deepCopy(fields()[7].schema(), other.distance_unit);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'character_name' field.
      * @return The value.
      */
    public java.lang.CharSequence getCharacterName() {
      return character_name;
    }


    /**
      * Sets the value of the 'character_name' field.
      * @param value The value of 'character_name'.
      * @return This builder.
      */
    public io.skodjob.datagenerator.models.stargate.StarGate.Builder setCharacterName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.character_name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'character_name' field has been set.
      * @return True if the 'character_name' field has been set, false otherwise.
      */
    public boolean hasCharacterName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'character_name' field.
      * @return This builder.
      */
    public io.skodjob.datagenerator.models.stargate.StarGate.Builder clearCharacterName() {
      character_name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'source_planet' field.
      * @return The value.
      */
    public java.lang.CharSequence getSourcePlanet() {
      return source_planet;
    }


    /**
      * Sets the value of the 'source_planet' field.
      * @param value The value of 'source_planet'.
      * @return This builder.
      */
    public io.skodjob.datagenerator.models.stargate.StarGate.Builder setSourcePlanet(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.source_planet = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'source_planet' field has been set.
      * @return True if the 'source_planet' field has been set, false otherwise.
      */
    public boolean hasSourcePlanet() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'source_planet' field.
      * @return This builder.
      */
    public io.skodjob.datagenerator.models.stargate.StarGate.Builder clearSourcePlanet() {
      source_planet = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'target_planet' field.
      * @return The value.
      */
    public java.lang.CharSequence getTargetPlanet() {
      return target_planet;
    }


    /**
      * Sets the value of the 'target_planet' field.
      * @param value The value of 'target_planet'.
      * @return This builder.
      */
    public io.skodjob.datagenerator.models.stargate.StarGate.Builder setTargetPlanet(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.target_planet = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'target_planet' field has been set.
      * @return True if the 'target_planet' field has been set, false otherwise.
      */
    public boolean hasTargetPlanet() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'target_planet' field.
      * @return This builder.
      */
    public io.skodjob.datagenerator.models.stargate.StarGate.Builder clearTargetPlanet() {
      target_planet = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'quote' field.
      * @return The value.
      */
    public java.lang.CharSequence getQuote() {
      return quote;
    }


    /**
      * Sets the value of the 'quote' field.
      * @param value The value of 'quote'.
      * @return This builder.
      */
    public io.skodjob.datagenerator.models.stargate.StarGate.Builder setQuote(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.quote = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'quote' field has been set.
      * @return True if the 'quote' field has been set, false otherwise.
      */
    public boolean hasQuote() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'quote' field.
      * @return This builder.
      */
    public io.skodjob.datagenerator.models.stargate.StarGate.Builder clearQuote() {
      quote = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'duration' field.
      * @return The value.
      */
    public int getDuration() {
      return duration;
    }


    /**
      * Sets the value of the 'duration' field.
      * @param value The value of 'duration'.
      * @return This builder.
      */
    public io.skodjob.datagenerator.models.stargate.StarGate.Builder setDuration(int value) {
      validate(fields()[4], value);
      this.duration = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'duration' field has been set.
      * @return True if the 'duration' field has been set, false otherwise.
      */
    public boolean hasDuration() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'duration' field.
      * @return This builder.
      */
    public io.skodjob.datagenerator.models.stargate.StarGate.Builder clearDuration() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'duration_unit' field.
      * @return The value.
      */
    public java.lang.CharSequence getDurationUnit() {
      return duration_unit;
    }


    /**
      * Sets the value of the 'duration_unit' field.
      * @param value The value of 'duration_unit'.
      * @return This builder.
      */
    public io.skodjob.datagenerator.models.stargate.StarGate.Builder setDurationUnit(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.duration_unit = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'duration_unit' field has been set.
      * @return True if the 'duration_unit' field has been set, false otherwise.
      */
    public boolean hasDurationUnit() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'duration_unit' field.
      * @return This builder.
      */
    public io.skodjob.datagenerator.models.stargate.StarGate.Builder clearDurationUnit() {
      duration_unit = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'distance' field.
      * @return The value.
      */
    public int getDistance() {
      return distance;
    }


    /**
      * Sets the value of the 'distance' field.
      * @param value The value of 'distance'.
      * @return This builder.
      */
    public io.skodjob.datagenerator.models.stargate.StarGate.Builder setDistance(int value) {
      validate(fields()[6], value);
      this.distance = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'distance' field has been set.
      * @return True if the 'distance' field has been set, false otherwise.
      */
    public boolean hasDistance() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'distance' field.
      * @return This builder.
      */
    public io.skodjob.datagenerator.models.stargate.StarGate.Builder clearDistance() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'distance_unit' field.
      * @return The value.
      */
    public java.lang.CharSequence getDistanceUnit() {
      return distance_unit;
    }


    /**
      * Sets the value of the 'distance_unit' field.
      * @param value The value of 'distance_unit'.
      * @return This builder.
      */
    public io.skodjob.datagenerator.models.stargate.StarGate.Builder setDistanceUnit(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.distance_unit = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'distance_unit' field has been set.
      * @return True if the 'distance_unit' field has been set, false otherwise.
      */
    public boolean hasDistanceUnit() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'distance_unit' field.
      * @return This builder.
      */
    public io.skodjob.datagenerator.models.stargate.StarGate.Builder clearDistanceUnit() {
      distance_unit = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public StarGate build() {
      try {
        StarGate record = new StarGate();
        record.character_name = fieldSetFlags()[0] ? this.character_name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.source_planet = fieldSetFlags()[1] ? this.source_planet : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.target_planet = fieldSetFlags()[2] ? this.target_planet : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.quote = fieldSetFlags()[3] ? this.quote : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.duration = fieldSetFlags()[4] ? this.duration : (java.lang.Integer) defaultValue(fields()[4]);
        record.duration_unit = fieldSetFlags()[5] ? this.duration_unit : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.distance = fieldSetFlags()[6] ? this.distance : (java.lang.Integer) defaultValue(fields()[6]);
        record.distance_unit = fieldSetFlags()[7] ? this.distance_unit : (java.lang.CharSequence) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<StarGate>
    WRITER$ = (org.apache.avro.io.DatumWriter<StarGate>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<StarGate>
    READER$ = (org.apache.avro.io.DatumReader<StarGate>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.character_name);

    out.writeString(this.source_planet);

    out.writeString(this.target_planet);

    out.writeString(this.quote);

    out.writeInt(this.duration);

    out.writeString(this.duration_unit);

    out.writeInt(this.distance);

    out.writeString(this.distance_unit);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.character_name = in.readString(this.character_name instanceof Utf8 ? (Utf8)this.character_name : null);

      this.source_planet = in.readString(this.source_planet instanceof Utf8 ? (Utf8)this.source_planet : null);

      this.target_planet = in.readString(this.target_planet instanceof Utf8 ? (Utf8)this.target_planet : null);

      this.quote = in.readString(this.quote instanceof Utf8 ? (Utf8)this.quote : null);

      this.duration = in.readInt();

      this.duration_unit = in.readString(this.duration_unit instanceof Utf8 ? (Utf8)this.duration_unit : null);

      this.distance = in.readInt();

      this.distance_unit = in.readString(this.distance_unit instanceof Utf8 ? (Utf8)this.distance_unit : null);

    } else {
      for (int i = 0; i < 8; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.character_name = in.readString(this.character_name instanceof Utf8 ? (Utf8)this.character_name : null);
          break;

        case 1:
          this.source_planet = in.readString(this.source_planet instanceof Utf8 ? (Utf8)this.source_planet : null);
          break;

        case 2:
          this.target_planet = in.readString(this.target_planet instanceof Utf8 ? (Utf8)this.target_planet : null);
          break;

        case 3:
          this.quote = in.readString(this.quote instanceof Utf8 ? (Utf8)this.quote : null);
          break;

        case 4:
          this.duration = in.readInt();
          break;

        case 5:
          this.duration_unit = in.readString(this.duration_unit instanceof Utf8 ? (Utf8)this.duration_unit : null);
          break;

        case 6:
          this.distance = in.readInt();
          break;

        case 7:
          this.distance_unit = in.readString(this.distance_unit instanceof Utf8 ? (Utf8)this.distance_unit : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










